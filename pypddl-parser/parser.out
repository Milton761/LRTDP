Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 4     problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
Rule 5     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 6     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 7     objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 8     init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 9     init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 10    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 11    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 12    require_key_lst -> require_key require_key_lst
Rule 13    require_key_lst -> require_key
Rule 14    require_key -> STRIPS_KEY
Rule 15    require_key -> EQUALITY_KEY
Rule 16    require_key -> TYPING_KEY
Rule 17    require_key -> PROBABILISTIC_EFFECTS_KEY
Rule 18    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 19    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 20    predicate_def_lst -> predicate_def predicate_def_lst
Rule 21    predicate_def_lst -> predicate_def
Rule 22    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 23    predicate_def -> LPAREN NAME RPAREN
Rule 24    action_def_lst -> action_def action_def_lst
Rule 25    action_def_lst -> action_def
Rule 26    action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
Rule 27    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 28    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 29    action_def_body -> precond_def effects_def
Rule 30    precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
Rule 31    precond_def -> PRECONDITION_KEY literal
Rule 32    effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
Rule 33    effects_def -> EFFECT_KEY effect
Rule 34    effects_lst -> effect effects_lst
Rule 35    effects_lst -> effect
Rule 36    effect -> literal
Rule 37    effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
Rule 38    literals_lst -> literal literals_lst
Rule 39    literals_lst -> literal
Rule 40    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 41    literal -> predicate
Rule 42    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 43    ground_predicates_lst -> ground_predicate
Rule 44    predicate -> LPAREN NAME variables_lst RPAREN
Rule 45    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 46    predicate -> LPAREN NAME RPAREN
Rule 47    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 48    ground_predicate -> LPAREN NAME RPAREN
Rule 49    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 50    typed_constants_lst -> constants_lst HYPHEN type
Rule 51    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 52    typed_variables_lst -> variables_lst HYPHEN type
Rule 53    constants_lst -> constant constants_lst
Rule 54    constants_lst -> constant
Rule 55    variables_lst -> VARIABLE variables_lst
Rule 56    variables_lst -> VARIABLE
Rule 57    names_lst -> NAME names_lst
Rule 58    names_lst -> NAME
Rule 59    type -> NAME
Rule 60    constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 26
AND_KEY              : 8 10 30 32
DEFINE_KEY           : 3 4
DOMAIN_KEY           : 5
EFFECT_KEY           : 32 33
EQUALITY_KEY         : 15
EQUALS               : 45
GOAL_KEY             : 10
HYPHEN               : 49 50 51 52
INIT_KEY             : 8 9
LPAREN               : 3 4 5 6 7 8 8 9 10 10 11 18 19 22 23 26 27 28 30 32 37 40 44 45 46 47 48
NAME                 : 5 6 22 23 26 44 46 47 48 57 58 59 60
NOT_KEY              : 40
OBJECTS_KEY          : 7
PARAMETERS_KEY       : 27 28
PRECONDITION_KEY     : 30 31
PREDICATES_KEY       : 19
PROBABILISTIC_EFFECTS_KEY : 17
PROBABILISTIC_KEY    : 37
PROBABILITY          : 37
PROBLEM_KEY          : 6
REQUIREMENTS_KEY     : 11
RPAREN               : 3 4 5 6 7 8 8 9 10 10 11 18 19 22 23 26 27 28 30 32 37 40 44 45 46 47 48
STRIPS_KEY           : 14
TYPES_KEY            : 18
TYPING_KEY           : 16
VARIABLE             : 45 45 55 56
error                : 

Nonterminals, with rules where they appear

action_def           : 24 25
action_def_body      : 26
action_def_lst       : 3 24
constant             : 53 54
constants_lst        : 47 49 50 53
domain               : 1
domain_def           : 3 4
effect               : 33 34 35
effects_def          : 29
effects_lst          : 32 34
goal_def             : 4
ground_predicate     : 42 43
ground_predicates_lst : 8 9 10 42
init_def             : 4
literal              : 31 36 37 38 39
literals_lst         : 30 38
names_lst            : 18 57
objects_def          : 4
parameters_def       : 26
pddl                 : 0
precond_def          : 29
predicate            : 40 41
predicate_def        : 20 21
predicate_def_lst    : 19 20
predicates_def       : 3
problem              : 2
problem_def          : 4
require_def          : 3
require_key          : 12 13
require_key_lst      : 11 12
type                 : 49 50 51 52
typed_constants_lst  : 7 49
typed_variables_lst  : 22 27 51
types_def            : 3
variables_lst        : 44 51 52 55

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (3) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) problem -> . LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN

    LPAREN          shift and go to state 3

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 4

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (3) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) problem -> LPAREN . DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 4

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 5

    (3) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) problem -> LPAREN DEFINE_KEY . problem_def domain_def objects_def init_def goal_def RPAREN
    (5) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (6) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 7

    problem_def                    shift and go to state 6
    domain_def                     shift and go to state 8

state 6

    (4) problem -> LPAREN DEFINE_KEY problem_def . domain_def objects_def init_def goal_def RPAREN
    (5) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 9

    domain_def                     shift and go to state 10

state 7

    (5) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (6) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 12
    PROBLEM_KEY     shift and go to state 11


state 8

    (3) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (11) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 14

    require_def                    shift and go to state 13

state 9

    (5) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 12


state 10

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def . objects_def init_def goal_def RPAREN
    (7) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN

    LPAREN          shift and go to state 16

    objects_def                    shift and go to state 15

state 11

    (6) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 17


state 12

    (5) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 18


state 13

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (18) types_def -> . LPAREN TYPES_KEY names_lst RPAREN

    LPAREN          shift and go to state 19

    types_def                      shift and go to state 20

state 14

    (11) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 21


state 15

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def . init_def goal_def RPAREN
    (8) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 23

    init_def                       shift and go to state 22

state 16

    (7) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN

    OBJECTS_KEY     shift and go to state 24


state 17

    (6) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 25


state 18

    (5) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 26


state 19

    (18) types_def -> LPAREN . TYPES_KEY names_lst RPAREN

    TYPES_KEY       shift and go to state 27


state 20

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (19) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 29

    predicates_def                 shift and go to state 28

state 21

    (11) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (12) require_key_lst -> . require_key require_key_lst
    (13) require_key_lst -> . require_key
    (14) require_key -> . STRIPS_KEY
    (15) require_key -> . EQUALITY_KEY
    (16) require_key -> . TYPING_KEY
    (17) require_key -> . PROBABILISTIC_EFFECTS_KEY

    STRIPS_KEY      shift and go to state 30
    EQUALITY_KEY    shift and go to state 34
    TYPING_KEY      shift and go to state 32
    PROBABILISTIC_EFFECTS_KEY shift and go to state 35

    require_key_lst                shift and go to state 33
    require_key                    shift and go to state 31

state 22

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def . goal_def RPAREN
    (10) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 37

    goal_def                       shift and go to state 36

state 23

    (8) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    INIT_KEY        shift and go to state 38


state 24

    (7) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (49) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (50) typed_constants_lst -> . constants_lst HYPHEN type
    (53) constants_lst -> . constant constants_lst
    (54) constants_lst -> . constant
    (60) constant -> . NAME

    NAME            shift and go to state 41

    constants_lst                  shift and go to state 42
    typed_constants_lst            shift and go to state 39
    constant                       shift and go to state 40

state 25

    (6) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 6 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 26

    (5) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 5 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 27

    (18) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (57) names_lst -> . NAME names_lst
    (58) names_lst -> . NAME

    NAME            shift and go to state 43

    names_lst                      shift and go to state 44

state 28

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (24) action_def_lst -> . action_def action_def_lst
    (25) action_def_lst -> . action_def
    (26) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    LPAREN          shift and go to state 47

    action_def_lst                 shift and go to state 46
    action_def                     shift and go to state 45

state 29

    (19) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 48


state 30

    (14) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 14 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 14 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 14 (require_key -> STRIPS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 14 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 14 (require_key -> STRIPS_KEY .)


state 31

    (12) require_key_lst -> require_key . require_key_lst
    (13) require_key_lst -> require_key .
    (12) require_key_lst -> . require_key require_key_lst
    (13) require_key_lst -> . require_key
    (14) require_key -> . STRIPS_KEY
    (15) require_key -> . EQUALITY_KEY
    (16) require_key -> . TYPING_KEY
    (17) require_key -> . PROBABILISTIC_EFFECTS_KEY

    RPAREN          reduce using rule 13 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 30
    EQUALITY_KEY    shift and go to state 34
    TYPING_KEY      shift and go to state 32
    PROBABILISTIC_EFFECTS_KEY shift and go to state 35

    require_key_lst                shift and go to state 49
    require_key                    shift and go to state 31

state 32

    (16) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 16 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 16 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 16 (require_key -> TYPING_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 16 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 16 (require_key -> TYPING_KEY .)


state 33

    (11) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 50


state 34

    (15) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 15 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 15 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 15 (require_key -> EQUALITY_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 15 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 15 (require_key -> EQUALITY_KEY .)


state 35

    (17) require_key -> PROBABILISTIC_EFFECTS_KEY .

    STRIPS_KEY      reduce using rule 17 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    EQUALITY_KEY    reduce using rule 17 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    TYPING_KEY      reduce using rule 17 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 17 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    RPAREN          reduce using rule 17 (require_key -> PROBABILISTIC_EFFECTS_KEY .)


state 36

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 51


state 37

    (10) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    GOAL_KEY        shift and go to state 52


state 38

    (8) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (42) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (43) ground_predicates_lst -> . ground_predicate
    (47) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (48) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 55

    ground_predicate               shift and go to state 53
    ground_predicates_lst          shift and go to state 54

state 39

    (7) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 56


state 40

    (53) constants_lst -> constant . constants_lst
    (54) constants_lst -> constant .
    (53) constants_lst -> . constant constants_lst
    (54) constants_lst -> . constant
    (60) constant -> . NAME

    HYPHEN          reduce using rule 54 (constants_lst -> constant .)
    RPAREN          reduce using rule 54 (constants_lst -> constant .)
    NAME            shift and go to state 41

    constants_lst                  shift and go to state 57
    constant                       shift and go to state 40

state 41

    (60) constant -> NAME .

    NAME            reduce using rule 60 (constant -> NAME .)
    RPAREN          reduce using rule 60 (constant -> NAME .)
    HYPHEN          reduce using rule 60 (constant -> NAME .)


state 42

    (49) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (50) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 58


state 43

    (57) names_lst -> NAME . names_lst
    (58) names_lst -> NAME .
    (57) names_lst -> . NAME names_lst
    (58) names_lst -> . NAME

    RPAREN          reduce using rule 58 (names_lst -> NAME .)
    NAME            shift and go to state 43

    names_lst                      shift and go to state 59

state 44

    (18) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 60


state 45

    (24) action_def_lst -> action_def . action_def_lst
    (25) action_def_lst -> action_def .
    (24) action_def_lst -> . action_def action_def_lst
    (25) action_def_lst -> . action_def
    (26) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    RPAREN          reduce using rule 25 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 47

    action_def                     shift and go to state 45
    action_def_lst                 shift and go to state 61

state 46

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 62


state 47

    (26) action_def -> LPAREN . ACTION_KEY NAME parameters_def action_def_body RPAREN

    ACTION_KEY      shift and go to state 63


state 48

    (19) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (20) predicate_def_lst -> . predicate_def predicate_def_lst
    (21) predicate_def_lst -> . predicate_def
    (22) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (23) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 65

    predicate_def                  shift and go to state 66
    predicate_def_lst              shift and go to state 64

state 49

    (12) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 12 (require_key_lst -> require_key require_key_lst .)


state 50

    (11) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 11 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 51

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .

    $end            reduce using rule 4 (problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .)


state 52

    (10) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 67


state 53

    (42) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (43) ground_predicates_lst -> ground_predicate .
    (42) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (43) ground_predicates_lst -> . ground_predicate
    (47) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (48) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 43 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 69

    ground_predicate               shift and go to state 53
    ground_predicates_lst          shift and go to state 68

state 54

    (9) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 70


state 55

    (8) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (47) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (48) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 72
    NAME            shift and go to state 71


state 56

    (7) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 7 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 57

    (53) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 53 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 53 (constants_lst -> constant constants_lst .)


state 58

    (49) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (50) typed_constants_lst -> constants_lst HYPHEN . type
    (59) type -> . NAME

    NAME            shift and go to state 73

    type                           shift and go to state 74

state 59

    (57) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 57 (names_lst -> NAME names_lst .)


state 60

    (18) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 18 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 61

    (24) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 24 (action_def_lst -> action_def action_def_lst .)


state 62

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 3 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 63

    (26) action_def -> LPAREN ACTION_KEY . NAME parameters_def action_def_body RPAREN

    NAME            shift and go to state 75


state 64

    (19) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 76


state 65

    (22) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (23) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 77


state 66

    (20) predicate_def_lst -> predicate_def . predicate_def_lst
    (21) predicate_def_lst -> predicate_def .
    (20) predicate_def_lst -> . predicate_def predicate_def_lst
    (21) predicate_def_lst -> . predicate_def
    (22) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (23) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 21 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 65

    predicate_def                  shift and go to state 66
    predicate_def_lst              shift and go to state 78

state 67

    (10) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN

    AND_KEY         shift and go to state 79


state 68

    (42) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 42 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 69

    (47) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (48) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 71


state 70

    (9) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 9 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 71

    (47) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (48) ground_predicate -> LPAREN NAME . RPAREN
    (53) constants_lst -> . constant constants_lst
    (54) constants_lst -> . constant
    (60) constant -> . NAME

    RPAREN          shift and go to state 81
    NAME            shift and go to state 41

    constants_lst                  shift and go to state 80
    constant                       shift and go to state 40

state 72

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (42) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (43) ground_predicates_lst -> . ground_predicate
    (47) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (48) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 69

    ground_predicate               shift and go to state 53
    ground_predicates_lst          shift and go to state 82

state 73

    (59) type -> NAME .

    NAME            reduce using rule 59 (type -> NAME .)
    RPAREN          reduce using rule 59 (type -> NAME .)
    VARIABLE        reduce using rule 59 (type -> NAME .)


state 74

    (49) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (50) typed_constants_lst -> constants_lst HYPHEN type .
    (49) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (50) typed_constants_lst -> . constants_lst HYPHEN type
    (53) constants_lst -> . constant constants_lst
    (54) constants_lst -> . constant
    (60) constant -> . NAME

    RPAREN          reduce using rule 50 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 41

    constants_lst                  shift and go to state 42
    typed_constants_lst            shift and go to state 83
    constant                       shift and go to state 40

state 75

    (26) action_def -> LPAREN ACTION_KEY NAME . parameters_def action_def_body RPAREN
    (27) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (28) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 85

    parameters_def                 shift and go to state 84

state 76

    (19) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 19 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 77

    (22) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (23) predicate_def -> LPAREN NAME . RPAREN
    (51) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (52) typed_variables_lst -> . variables_lst HYPHEN type
    (55) variables_lst -> . VARIABLE variables_lst
    (56) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 89
    VARIABLE        shift and go to state 87

    variables_lst                  shift and go to state 86
    typed_variables_lst            shift and go to state 88

state 78

    (20) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 20 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 79

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (42) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (43) ground_predicates_lst -> . ground_predicate
    (47) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (48) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 69

    ground_predicate               shift and go to state 53
    ground_predicates_lst          shift and go to state 90

state 80

    (47) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 91


state 81

    (48) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 48 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 48 (ground_predicate -> LPAREN NAME RPAREN .)


state 82

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 92


state 83

    (49) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 49 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 84

    (26) action_def -> LPAREN ACTION_KEY NAME parameters_def . action_def_body RPAREN
    (29) action_def_body -> . precond_def effects_def
    (30) precond_def -> . PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
    (31) precond_def -> . PRECONDITION_KEY literal

    PRECONDITION_KEY shift and go to state 95

    precond_def                    shift and go to state 94
    action_def_body                shift and go to state 93

state 85

    (27) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (28) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 96


state 86

    (51) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (52) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 97


state 87

    (55) variables_lst -> VARIABLE . variables_lst
    (56) variables_lst -> VARIABLE .
    (55) variables_lst -> . VARIABLE variables_lst
    (56) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 56 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 56 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 87

    variables_lst                  shift and go to state 98

state 88

    (22) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 99


state 89

    (23) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 23 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 23 (predicate_def -> LPAREN NAME RPAREN .)


state 90

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 100


state 91

    (47) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 47 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 47 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 92

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 101


state 93

    (26) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body . RPAREN

    RPAREN          shift and go to state 102


state 94

    (29) action_def_body -> precond_def . effects_def
    (32) effects_def -> . EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
    (33) effects_def -> . EFFECT_KEY effect

    EFFECT_KEY      shift and go to state 104

    effects_def                    shift and go to state 103

state 95

    (30) precond_def -> PRECONDITION_KEY . LPAREN AND_KEY literals_lst RPAREN
    (31) precond_def -> PRECONDITION_KEY . literal
    (40) literal -> . LPAREN NOT_KEY predicate RPAREN
    (41) literal -> . predicate
    (44) predicate -> . LPAREN NAME variables_lst RPAREN
    (45) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 107

    literal                        shift and go to state 105
    predicate                      shift and go to state 106

state 96

    (27) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (28) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (51) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (52) typed_variables_lst -> . variables_lst HYPHEN type
    (55) variables_lst -> . VARIABLE variables_lst
    (56) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 109
    VARIABLE        shift and go to state 87

    variables_lst                  shift and go to state 86
    typed_variables_lst            shift and go to state 108

state 97

    (51) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (52) typed_variables_lst -> variables_lst HYPHEN . type
    (59) type -> . NAME

    NAME            shift and go to state 73

    type                           shift and go to state 110

state 98

    (55) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 55 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 55 (variables_lst -> VARIABLE variables_lst .)


state 99

    (22) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 22 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 22 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 100

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 111


state 101

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 8 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 102

    (26) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .

    LPAREN          reduce using rule 26 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)
    RPAREN          reduce using rule 26 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)


state 103

    (29) action_def_body -> precond_def effects_def .

    RPAREN          reduce using rule 29 (action_def_body -> precond_def effects_def .)


state 104

    (32) effects_def -> EFFECT_KEY . LPAREN AND_KEY effects_lst RPAREN
    (33) effects_def -> EFFECT_KEY . effect
    (36) effect -> . literal
    (37) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (40) literal -> . LPAREN NOT_KEY predicate RPAREN
    (41) literal -> . predicate
    (44) predicate -> . LPAREN NAME variables_lst RPAREN
    (45) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 114

    effect                         shift and go to state 112
    literal                        shift and go to state 113
    predicate                      shift and go to state 106

state 105

    (31) precond_def -> PRECONDITION_KEY literal .

    EFFECT_KEY      reduce using rule 31 (precond_def -> PRECONDITION_KEY literal .)


state 106

    (41) literal -> predicate .

    LPAREN          reduce using rule 41 (literal -> predicate .)
    RPAREN          reduce using rule 41 (literal -> predicate .)
    EFFECT_KEY      reduce using rule 41 (literal -> predicate .)


state 107

    (30) precond_def -> PRECONDITION_KEY LPAREN . AND_KEY literals_lst RPAREN
    (40) literal -> LPAREN . NOT_KEY predicate RPAREN
    (44) predicate -> LPAREN . NAME variables_lst RPAREN
    (45) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 117
    NOT_KEY         shift and go to state 115
    NAME            shift and go to state 116
    EQUALS          shift and go to state 118


state 108

    (27) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 119


state 109

    (28) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 28 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 110

    (51) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (52) typed_variables_lst -> variables_lst HYPHEN type .
    (51) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (52) typed_variables_lst -> . variables_lst HYPHEN type
    (55) variables_lst -> . VARIABLE variables_lst
    (56) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 52 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 87

    variables_lst                  shift and go to state 86
    typed_variables_lst            shift and go to state 120

state 111

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 10 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 112

    (33) effects_def -> EFFECT_KEY effect .

    RPAREN          reduce using rule 33 (effects_def -> EFFECT_KEY effect .)


state 113

    (36) effect -> literal .

    LPAREN          reduce using rule 36 (effect -> literal .)
    RPAREN          reduce using rule 36 (effect -> literal .)


state 114

    (32) effects_def -> EFFECT_KEY LPAREN . AND_KEY effects_lst RPAREN
    (37) effect -> LPAREN . PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (40) literal -> LPAREN . NOT_KEY predicate RPAREN
    (44) predicate -> LPAREN . NAME variables_lst RPAREN
    (45) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 121
    PROBABILISTIC_KEY shift and go to state 122
    NOT_KEY         shift and go to state 115
    NAME            shift and go to state 116
    EQUALS          shift and go to state 118


state 115

    (40) literal -> LPAREN NOT_KEY . predicate RPAREN
    (44) predicate -> . LPAREN NAME variables_lst RPAREN
    (45) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 124

    predicate                      shift and go to state 123

state 116

    (44) predicate -> LPAREN NAME . variables_lst RPAREN
    (46) predicate -> LPAREN NAME . RPAREN
    (55) variables_lst -> . VARIABLE variables_lst
    (56) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 126
    VARIABLE        shift and go to state 87

    variables_lst                  shift and go to state 125

state 117

    (30) precond_def -> PRECONDITION_KEY LPAREN AND_KEY . literals_lst RPAREN
    (38) literals_lst -> . literal literals_lst
    (39) literals_lst -> . literal
    (40) literal -> . LPAREN NOT_KEY predicate RPAREN
    (41) literal -> . predicate
    (44) predicate -> . LPAREN NAME variables_lst RPAREN
    (45) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 129

    literal                        shift and go to state 127
    literals_lst                   shift and go to state 128
    predicate                      shift and go to state 106

state 118

    (45) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 130


state 119

    (27) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 27 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 120

    (51) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 51 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 121

    (32) effects_def -> EFFECT_KEY LPAREN AND_KEY . effects_lst RPAREN
    (34) effects_lst -> . effect effects_lst
    (35) effects_lst -> . effect
    (36) effect -> . literal
    (37) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (40) literal -> . LPAREN NOT_KEY predicate RPAREN
    (41) literal -> . predicate
    (44) predicate -> . LPAREN NAME variables_lst RPAREN
    (45) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 133

    effect                         shift and go to state 131
    literal                        shift and go to state 113
    effects_lst                    shift and go to state 132
    predicate                      shift and go to state 106

state 122

    (37) effect -> LPAREN PROBABILISTIC_KEY . PROBABILITY literal RPAREN

    PROBABILITY     shift and go to state 134


state 123

    (40) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 135


state 124

    (44) predicate -> LPAREN . NAME variables_lst RPAREN
    (45) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 116
    EQUALS          shift and go to state 118


state 125

    (44) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 136


state 126

    (46) predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 46 (predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 46 (predicate -> LPAREN NAME RPAREN .)
    EFFECT_KEY      reduce using rule 46 (predicate -> LPAREN NAME RPAREN .)


state 127

    (38) literals_lst -> literal . literals_lst
    (39) literals_lst -> literal .
    (38) literals_lst -> . literal literals_lst
    (39) literals_lst -> . literal
    (40) literal -> . LPAREN NOT_KEY predicate RPAREN
    (41) literal -> . predicate
    (44) predicate -> . LPAREN NAME variables_lst RPAREN
    (45) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 39 (literals_lst -> literal .)
    LPAREN          shift and go to state 129

    literal                        shift and go to state 127
    literals_lst                   shift and go to state 137
    predicate                      shift and go to state 106

state 128

    (30) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst . RPAREN

    RPAREN          shift and go to state 138


state 129

    (40) literal -> LPAREN . NOT_KEY predicate RPAREN
    (44) predicate -> LPAREN . NAME variables_lst RPAREN
    (45) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 115
    NAME            shift and go to state 116
    EQUALS          shift and go to state 118


state 130

    (45) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 139


state 131

    (34) effects_lst -> effect . effects_lst
    (35) effects_lst -> effect .
    (34) effects_lst -> . effect effects_lst
    (35) effects_lst -> . effect
    (36) effect -> . literal
    (37) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (40) literal -> . LPAREN NOT_KEY predicate RPAREN
    (41) literal -> . predicate
    (44) predicate -> . LPAREN NAME variables_lst RPAREN
    (45) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 35 (effects_lst -> effect .)
    LPAREN          shift and go to state 133

    effect                         shift and go to state 131
    literal                        shift and go to state 113
    effects_lst                    shift and go to state 140
    predicate                      shift and go to state 106

state 132

    (32) effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst . RPAREN

    RPAREN          shift and go to state 141


state 133

    (37) effect -> LPAREN . PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (40) literal -> LPAREN . NOT_KEY predicate RPAREN
    (44) predicate -> LPAREN . NAME variables_lst RPAREN
    (45) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> LPAREN . NAME RPAREN

    PROBABILISTIC_KEY shift and go to state 122
    NOT_KEY         shift and go to state 115
    NAME            shift and go to state 116
    EQUALS          shift and go to state 118


state 134

    (37) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY . literal RPAREN
    (40) literal -> . LPAREN NOT_KEY predicate RPAREN
    (41) literal -> . predicate
    (44) predicate -> . LPAREN NAME variables_lst RPAREN
    (45) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (46) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 129

    literal                        shift and go to state 142
    predicate                      shift and go to state 106

state 135

    (40) literal -> LPAREN NOT_KEY predicate RPAREN .

    LPAREN          reduce using rule 40 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    RPAREN          reduce using rule 40 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    EFFECT_KEY      reduce using rule 40 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 136

    (44) predicate -> LPAREN NAME variables_lst RPAREN .

    LPAREN          reduce using rule 44 (predicate -> LPAREN NAME variables_lst RPAREN .)
    RPAREN          reduce using rule 44 (predicate -> LPAREN NAME variables_lst RPAREN .)
    EFFECT_KEY      reduce using rule 44 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 137

    (38) literals_lst -> literal literals_lst .

    RPAREN          reduce using rule 38 (literals_lst -> literal literals_lst .)


state 138

    (30) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .

    EFFECT_KEY      reduce using rule 30 (precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .)


state 139

    (45) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 143


state 140

    (34) effects_lst -> effect effects_lst .

    RPAREN          reduce using rule 34 (effects_lst -> effect effects_lst .)


state 141

    (32) effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN .

    RPAREN          reduce using rule 32 (effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN .)


state 142

    (37) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal . RPAREN

    RPAREN          shift and go to state 144


state 143

    (45) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    LPAREN          reduce using rule 45 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    RPAREN          reduce using rule 45 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    EFFECT_KEY      reduce using rule 45 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 144

    (37) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .

    LPAREN          reduce using rule 37 (effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .)
    RPAREN          reduce using rule 37 (effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .)

